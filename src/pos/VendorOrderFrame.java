package pos;

import pos.Classes.Database;

import java.util.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rocky Shamsul Alam
 */
public class VendorOrderFrame extends javax.swing.JFrame {

    Database db = new Database();
    Map<Integer, String> vendorMap = new HashMap<>();
    Map<Integer, String> categoryMap = new HashMap<>();
    Map<Integer, String> brandMap = new HashMap<>();
    ArrayList CategoryId = new ArrayList();
    ArrayList BrandId = new ArrayList();

    public VendorOrderFrame() {
        initComponents();
        db.dbConnect();
        dtm = (DefaultTableModel) tblVendorProduct.getModel();
        tblVendorProduct.removeColumn(tblVendorProduct.getColumnModel().getColumn(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbBrand = new javax.swing.JComboBox<>();
        cbCategory = new javax.swing.JComboBox<>();
        cbVendor = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetails = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVendorProduct = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Vendor:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Category:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Brand:");

        btnInsert.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnInsert.setText("Add");
        btnInsert.setPreferredSize(new java.awt.Dimension(90, 30));
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(90, 30));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnReset.setText("Reset Field");
        btnReset.setPreferredSize(new java.awt.Dimension(90, 30));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Vendor Order");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Product Name:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Product Price:");

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Product Quantity:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Product Details:");

        cbBrand.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbBrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select Brand --" }));

        cbCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select Category --" }));

        cbVendor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbVendor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select Vendor--" }));
        cbVendor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbVendorItemStateChanged(evt);
            }
        });
        cbVendor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbVendorMouseClicked(evt);
            }
        });

        txtDetails.setColumns(20);
        txtDetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDetails.setRows(5);
        jScrollPane2.setViewportView(txtDetails);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setPreferredSize(new java.awt.Dimension(90, 30));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setText("Total Amount: 0");

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSave.setText("Save Order");
        btnSave.setPreferredSize(new java.awt.Dimension(90, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnCancle.setText("Cancle Order");
        btnCancle.setPreferredSize(new java.awt.Dimension(90, 30));
        btnCancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancleActionPerformed(evt);
            }
        });

        tblVendorProduct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblVendorProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor", "Category", "Brand", "Poduct", "Price", "Quantity", "Details", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVendorProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVendorProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVendorProduct);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Product List:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(cbVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(lblTotal)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancle, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(423, 423, 423)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(20, 20, 20)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean input() {

        if (cbVendor.getSelectedIndex() != 0
                && cbCategory.getSelectedIndex() != 0
                && cbBrand.getSelectedIndex() != 0
                && !txtName.getText().isEmpty()
                && !txtPrice.getText().isEmpty()
                && !txtQuantity.getText().isEmpty()
                && !txtDetails.getText().isEmpty()) {

            Vendor = cbVendor.getSelectedItem().toString();
            Category = cbCategory.getSelectedItem().toString();
            Brand = cbBrand.getSelectedItem().toString();
            Name = txtName.getText();
            Price = Double.parseDouble(txtPrice.getText());
            Quantity = Integer.parseInt(txtQuantity.getText());
            Details = txtDetails.getText();

            return true;

        } else {

            JOptionPane.showMessageDialog(null, "Plesase fill the empty field !", "Input Validation", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    private void inputsReset() {
        //cbVendor.setSelectedIndex(0);
        cbCategory.setSelectedIndex(0);
        cbBrand.setSelectedIndex(0);
        txtName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtDetails.setText("");
        selectedRow = -1;
    }

    private void VendorList() {

        try {

            String query = "select * from tblVendor";
            sta = db.con.createStatement();
            rs = sta.executeQuery(query);

            while (rs.next()) {
                vendorMap.put(rs.getInt("Id"), rs.getString("Name"));
                cbVendor.addItem(rs.getString("Name"));
            }

            sta.close();
            System.out.println(vendorMap);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "vendortList: " + ex);
        }
    }

    private void CategoryList() {

        try {

            String query = "select * from tblCategory";
            sta = db.con.createStatement();
            rs = sta.executeQuery(query);

            while (rs.next()) {
                categoryMap.put(rs.getInt("Id"), rs.getString("Name"));
                cbCategory.addItem(rs.getString("Name"));
            }

            sta.close();
            System.out.println(categoryMap);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "CategoryList: " + ex);
        }
    }

    private void BrandList() {

        try {

            String query = "select * from tblBrand";
            sta = db.con.createStatement();
            rs = sta.executeQuery(query);

            while (rs.next()) {
                brandMap.put(rs.getInt("Id"), rs.getString("Name"));
                cbBrand.addItem(rs.getString("Name"));
            }

            sta.close();
            System.out.println(brandMap);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "BrandList: " + ex);
        }
    }

    private void getVendorId() {

        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (Map.Entry vm : vendorMap.entrySet()) {
                if (dtm.getValueAt(i, 0).equals(vm.getValue())) {
                    VendorId = (int) vm.getKey();
                }
            }
        }
    }

    private void getCategoryId() {

        CategoryId.clear();
        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (Map.Entry cm : categoryMap.entrySet()) {
                if (dtm.getValueAt(i, 1).equals(cm.getValue())) {
                    CategoryId.add(cm.getKey());
                }
            }
        }
    }

    private void getBrandId() {

        BrandId.clear();
        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (Map.Entry bm : brandMap.entrySet()) {
                if (dtm.getValueAt(i, 2).equals(bm.getValue())) {
                    BrandId.add(bm.getKey());
                }
            }
        }
    }

    private Integer SaveOrderId() {

        getVendorId();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        String currentDT = dateFormat.format(date);
        Integer orderId = null;

        try {
            String iQuery = "insert into tblvendororder (VendorId, Date) values ('" + VendorId + "', '" + currentDT + "')";
            sta = db.con.createStatement();
            sta.execute(iQuery);
            sta.close();

            String sQuery = "select * from tblvendororder";
            sta = db.con.createStatement();
            rs = sta.executeQuery(sQuery);

            if (rs.last()) {
                orderId = rs.getInt("Id");
            }
            sta.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        return orderId;
    }

    private void TotalAmount() {

        double total = 0;
        for (int i = 0; i < tblVendorProduct.getRowCount(); i++) {
            total = total + Double.parseDouble((tblVendorProduct.getValueAt(i, 6).toString()));
        }

        lblTotal.setText("Total Amount: " + total);
    }

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed

        if (input()) {
            if (selectedRow < 0) {

                Object Product[] = {
                    Vendor,
                    Category,
                    Brand,
                    Name,
                    Price,
                    Quantity,
                    Details,
                    Price * Quantity
                };

                cbVendor.setEnabled(false);
                dtm.addRow(Product);
                TotalAmount();

            } else {

                JOptionPane.showMessageDialog(null, "You can't add !", "Modify Row", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        if (selectedRow >= 0) {

            int reply = JOptionPane.showConfirmDialog(null, "Do you want to delete ?", "Delete Product", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {

                dtm.removeRow(selectedRow);
                inputsReset();
                TotalAmount();
            }
        } else {

            JOptionPane.showMessageDialog(null, "No row selected !", "Modify Row", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        inputsReset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if (input()) {
            if (selectedRow >= 0) {

                dtm.setValueAt(Vendor, selectedRow, 0);
                dtm.setValueAt(Category, selectedRow, 1);
                dtm.setValueAt(Brand, selectedRow, 2);
                dtm.setValueAt(Name, selectedRow, 3);
                dtm.setValueAt(Price, selectedRow, 4);
                dtm.setValueAt(Quantity, selectedRow, 5);
                dtm.setValueAt(Details, selectedRow, 6);
                dtm.setValueAt(Price * Quantity, selectedRow, 7);

                inputsReset();
                TotalAmount();
            } else {
                JOptionPane.showMessageDialog(null, "No row selected !", "Modify Row", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        Integer orderId = SaveOrderId();
        getVendorId();
        getCategoryId();
        getBrandId();

        if (dtm.getRowCount() > 0) {

            int reply = JOptionPane.showConfirmDialog(null, "Are you sure ?", "Save Order", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {

                for (int i = 0; i < dtm.getRowCount(); i++) {

                    if (orderId != null) {
                        
                        int cId = (int) CategoryId.get(i);
                        int bId = (int) CategoryId.get(i);
                        String pName = dtm.getValueAt(i, 3).toString();
                        String pPrice = dtm.getValueAt(i, 4).toString();
                        String pQty = dtm.getValueAt(i, 5).toString();
                        String pDtls = dtm.getValueAt(i, 6).toString();

                        try {
                            String ipQuery = "insert into tblstock (VendorOrderId, CategoryId, BrandId, ProductName, ProductPrice, ProductQuantity, ProductDetails) values ('" + orderId + "', '" + cId + "', '" + bId + "', '" + pName + "', '" + pPrice + "', '" + pQty + "', '" + pDtls + "')";
                            sta = db.con.createStatement();
                            sta.execute(ipQuery);
                            sta.close();
                        
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "Empty Order !", "Save Order", JOptionPane.WARNING_MESSAGE);
                    }
                }
                JOptionPane.showMessageDialog(null, "The order Successfully saved.", "Save Order", JOptionPane.INFORMATION_MESSAGE);
                dtm.setRowCount(0);
                inputsReset();
                TotalAmount();
                cbVendor.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Empty product list !", "Save Order", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancleActionPerformed

        int reply = JOptionPane.showConfirmDialog(null, "Are you sure ?", "Cancle Order", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            dtm.setRowCount(0);
            inputsReset();
            TotalAmount();
            cbVendor.setEnabled(true);
        }
    }//GEN-LAST:event_btnCancleActionPerformed

    private void tblVendorProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVendorProductMouseClicked
        selectedRow = tblVendorProduct.getSelectedRow();

        if (selectedRow >= 0) {

            cbVendor.setSelectedItem(dtm.getValueAt(selectedRow, 0).toString());
            cbCategory.setSelectedItem(dtm.getValueAt(selectedRow, 1).toString());
            cbBrand.setSelectedItem(dtm.getValueAt(selectedRow, 2).toString());
            txtName.setText(dtm.getValueAt(selectedRow, 3).toString());
            txtPrice.setText(dtm.getValueAt(selectedRow, 4).toString());
            txtQuantity.setText(dtm.getValueAt(selectedRow, 5).toString());
            txtDetails.setText(dtm.getValueAt(selectedRow, 6).toString());
        } else {
            JOptionPane.showMessageDialog(null, "No row selected !", "Modify Row", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tblVendorProductMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        VendorList();
        CategoryList();
        BrandList();
    }//GEN-LAST:event_formWindowOpened

    private void cbVendorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbVendorMouseClicked

    }//GEN-LAST:event_cbVendorMouseClicked

    private void cbVendorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbVendorItemStateChanged

    }//GEN-LAST:event_cbVendorItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendorOrderFrame().setVisible(true);
            }
        });
    }

    // Input Variables declaration
    private String Vendor;
    private String Category;
    private String Brand;
    private String Name;
    private double Price;
    private int Quantity;
    private String Details;
    private int VendorId;

    // Database Variables declaration
    private Statement sta;
    private ResultSet rs;

    // Table Variables declaration
    private int selectedRow = - 1;
    private final DefaultTableModel dtm;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancle;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbBrand;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTotal;
    public javax.swing.JTable tblVendorProduct;
    private javax.swing.JTextArea txtDetails;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
